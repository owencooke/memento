// This file is auto-generated by @hey-api/openapi-ts

/**
 * Collections Schema for Pydantic.
 *
 * Inherits from CollectionsBaseSchema. Add any customization here.
 */
export type Collections = {
    id: number;
    caption?: string | null;
    created_at: string;
    title: string;
    updated_at: string;
    user_id: string;
    user_ids?: Array<UserInfo> | null;
};

/**
 * Collections Insert Schema.
 */
export type CollectionsInsert = {
    title: string;
    caption?: string | null;
    created_at?: string | null;
    updated_at?: string | null;
    user_id?: string | null;
};

export type HttpValidationError = {
    detail?: Array<ValidationError>;
};

/**
 * UserInfo Schema for Pydantic.
 *
 * Inherits from UserInfoBaseSchema. Add any customization here.
 */
export type UserInfo = {
    id: string;
    birthday?: string | null;
    ids?: Array<Collections> | null;
};

export type ValidationError = {
    loc: Array<string | number>;
    msg: string;
    type: string;
};

export type HealthCheckApiHealthGetData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/api/health';
};

export type HealthCheckApiHealthGetResponses = {
    /**
     * Successful Response
     */
    200: unknown;
};

export type UserInfoApiUserIdGetData = {
    body?: never;
    path: {
        id: string;
    };
    query?: never;
    url: '/api/user/{id}';
};

export type UserInfoApiUserIdGetErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type UserInfoApiUserIdGetError = UserInfoApiUserIdGetErrors[keyof UserInfoApiUserIdGetErrors];

export type UserInfoApiUserIdGetResponses = {
    /**
     * Successful Response
     */
    200: UserInfo;
};

export type UserInfoApiUserIdGetResponse = UserInfoApiUserIdGetResponses[keyof UserInfoApiUserIdGetResponses];

export type GetCollectionsApiUserIdCollectionsGetData = {
    body?: never;
    path: {
        id: string;
    };
    query?: never;
    url: '/api/user/{id}/collections';
};

export type GetCollectionsApiUserIdCollectionsGetErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type GetCollectionsApiUserIdCollectionsGetError = GetCollectionsApiUserIdCollectionsGetErrors[keyof GetCollectionsApiUserIdCollectionsGetErrors];

export type GetCollectionsApiUserIdCollectionsGetResponses = {
    /**
     * Successful Response
     */
    200: Array<Collections>;
};

export type GetCollectionsApiUserIdCollectionsGetResponse = GetCollectionsApiUserIdCollectionsGetResponses[keyof GetCollectionsApiUserIdCollectionsGetResponses];

export type CreateCollectionApiUserIdCollectionsPostData = {
    body: CollectionsInsert;
    path?: never;
    query?: never;
    url: '/api/user/{id}/collections';
};

export type CreateCollectionApiUserIdCollectionsPostErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type CreateCollectionApiUserIdCollectionsPostError = CreateCollectionApiUserIdCollectionsPostErrors[keyof CreateCollectionApiUserIdCollectionsPostErrors];

export type CreateCollectionApiUserIdCollectionsPostResponses = {
    /**
     * Successful Response
     */
    200: CollectionsInsert;
};

export type CreateCollectionApiUserIdCollectionsPostResponse = CreateCollectionApiUserIdCollectionsPostResponses[keyof CreateCollectionApiUserIdCollectionsPostResponses];

export type ClientOptions = {
    baseUrl: `${string}://${string}` | (string & {});
};