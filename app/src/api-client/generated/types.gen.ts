// This file is auto-generated by @hey-api/openapi-ts

export type BodyCreateNewCollectionApiUserUserIdCollectionPost = {
    new_collection: NewCollection;
    mementos: Array<number>;
};

export type BodyCreateNewMementoApiUserUserIdMementoPost = {
    memento_str: string;
    image_metadata_str: string;
    images: Array<Blob | File>;
};

export type BodyUpdateCollectionAndMementosApiUserUserIdCollectionIdPut = {
    collection: UpdateCollection;
    mementos: Array<number>;
};

export type BodyUpdateMementoAndImagesApiUserUserIdMementoIdPut = {
    memento_str: string;
    image_metadata_str: string;
    images?: Array<Blob | File> | null;
};

/**
 * Collection Schema for Pydantic.
 *
 * Inherits from CollectionBaseSchema. Add any customization here.
 */
export type Collection = {
    id: number;
    caption?: string | null;
    coordinates?: string | null;
    date?: string | null;
    location?: string | null;
    title: string;
    user_id: string;
    ids?: Array<HasMemento> | null;
};

export type CollectionWithMementos = {
    id: number;
    caption?: string | null;
    coordinates?: Coordinates | null;
    date?: string | null;
    location?: string | null;
    title: string;
    user_id: string;
    mementos: Array<HasMementoBaseSchema>;
};

/**
 * A model that provides methods for converting lat/long
 * coordinates between a variety of formats.
 */
export type Coordinates = {
    lat: number;
    long: number;
};

export type HttpValidationError = {
    detail?: Array<ValidationError>;
};

/**
 * HasMemento Schema for Pydantic.
 *
 * Inherits from HasMementoBaseSchema. Add any customization here.
 */
export type HasMemento = {
    collection_id: number;
    memento_id: number;
    collection_ids?: Array<Collection> | null;
    memento_ids?: Array<Memento> | null;
};

/**
 * HasMemento Base Schema.
 */
export type HasMementoBaseSchema = {
    collection_id: number;
    memento_id: number;
};

/**
 * Image Schema for Pydantic.
 *
 * Inherits from ImageBaseSchema. Add any customization here.
 */
export type Image = {
    id: number;
    memento_id: number;
    coordinates?: string | null;
    date?: string | null;
    detected_text?: string | null;
    filename: string;
    image_label?: string | null;
    order_index: number;
    memento_ids?: Array<Memento> | null;
};

export type ImageWithUrl = {
    id: number;
    memento_id: number;
    coordinates?: Coordinates | null;
    date?: string | null;
    detected_text?: string | null;
    filename: string;
    image_label?: string | null;
    order_index: number;
    url?: string;
};

/**
 * Memento Schema for Pydantic.
 *
 * Inherits from MementoBaseSchema. Add any customization here.
 */
export type Memento = {
    id: number;
    caption?: string | null;
    coordinates?: string | null;
    date?: string | null;
    location?: string | null;
    user_id: string;
    ids?: Array<Image> | null;
};

export type MementoWithImages = {
    id: number;
    caption?: string | null;
    coordinates?: Coordinates | null;
    date?: string | null;
    location?: string | null;
    user_id: string;
    images: Array<ImageWithUrl>;
};

/**
 * Inserting a new Collection to the DB.
 *
 * Overrides coordinates with proper Pydantic model.
 */
export type NewCollection = {
    title: string;
    caption?: string | null;
    coordinates?: Coordinates | null;
    date?: string | null;
    location?: string | null;
    user_id?: string | null;
};

/**
 * Updating an existing Collection record in the DB.
 */
export type UpdateCollection = {
    caption?: string | null;
    coordinates?: Coordinates | null;
    date?: string | null;
    location?: string | null;
    title?: string | null;
    user_id?: string | null;
};

/**
 * UserInfo Schema for Pydantic.
 *
 * Inherits from UserInfoBaseSchema. Add any customization here.
 */
export type UserInfo = {
    id: string;
    birthday?: string | null;
};

export type ValidationError = {
    loc: Array<string | number>;
    msg: string;
    type: string;
};

export type HealthCheckApiGetData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/api/';
};

export type HealthCheckApiGetResponses = {
    /**
     * Successful Response
     */
    200: unknown;
};

export type UserInfoApiUserIdGetData = {
    body?: never;
    path: {
        id: string;
    };
    query?: never;
    url: '/api/user/{id}';
};

export type UserInfoApiUserIdGetErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type UserInfoApiUserIdGetError = UserInfoApiUserIdGetErrors[keyof UserInfoApiUserIdGetErrors];

export type UserInfoApiUserIdGetResponses = {
    /**
     * Successful Response
     */
    200: UserInfo;
};

export type UserInfoApiUserIdGetResponse = UserInfoApiUserIdGetResponses[keyof UserInfoApiUserIdGetResponses];

export type GetUsersMementosApiUserUserIdMementoGetData = {
    body?: never;
    path: {
        user_id: string;
    };
    query?: never;
    url: '/api/user/{user_id}/memento/';
};

export type GetUsersMementosApiUserUserIdMementoGetErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type GetUsersMementosApiUserUserIdMementoGetError = GetUsersMementosApiUserUserIdMementoGetErrors[keyof GetUsersMementosApiUserUserIdMementoGetErrors];

export type GetUsersMementosApiUserUserIdMementoGetResponses = {
    /**
     * Successful Response
     */
    200: Array<MementoWithImages>;
};

export type GetUsersMementosApiUserUserIdMementoGetResponse = GetUsersMementosApiUserUserIdMementoGetResponses[keyof GetUsersMementosApiUserUserIdMementoGetResponses];

export type CreateNewMementoApiUserUserIdMementoPostData = {
    body: BodyCreateNewMementoApiUserUserIdMementoPost;
    path: {
        user_id: string;
    };
    query?: never;
    url: '/api/user/{user_id}/memento/';
};

export type CreateNewMementoApiUserUserIdMementoPostErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type CreateNewMementoApiUserUserIdMementoPostError = CreateNewMementoApiUserUserIdMementoPostErrors[keyof CreateNewMementoApiUserUserIdMementoPostErrors];

export type CreateNewMementoApiUserUserIdMementoPostResponses = {
    /**
     * Successful Response
     */
    200: unknown;
};

export type UpdateMementoAndImagesApiUserUserIdMementoIdPutData = {
    body: BodyUpdateMementoAndImagesApiUserUserIdMementoIdPut;
    path: {
        id: number;
    };
    query?: never;
    url: '/api/user/{user_id}/memento/{id}';
};

export type UpdateMementoAndImagesApiUserUserIdMementoIdPutErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type UpdateMementoAndImagesApiUserUserIdMementoIdPutError = UpdateMementoAndImagesApiUserUserIdMementoIdPutErrors[keyof UpdateMementoAndImagesApiUserUserIdMementoIdPutErrors];

export type UpdateMementoAndImagesApiUserUserIdMementoIdPutResponses = {
    /**
     * Successful Response
     */
    200: unknown;
};

export type GetUsersCollectionsApiUserUserIdCollectionGetData = {
    body?: never;
    path: {
        user_id: string;
    };
    query?: never;
    url: '/api/user/{user_id}/collection/';
};

export type GetUsersCollectionsApiUserUserIdCollectionGetErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type GetUsersCollectionsApiUserUserIdCollectionGetError = GetUsersCollectionsApiUserUserIdCollectionGetErrors[keyof GetUsersCollectionsApiUserUserIdCollectionGetErrors];

export type GetUsersCollectionsApiUserUserIdCollectionGetResponses = {
    /**
     * Successful Response
     */
    200: Array<CollectionWithMementos>;
};

export type GetUsersCollectionsApiUserUserIdCollectionGetResponse = GetUsersCollectionsApiUserUserIdCollectionGetResponses[keyof GetUsersCollectionsApiUserUserIdCollectionGetResponses];

export type CreateNewCollectionApiUserUserIdCollectionPostData = {
    body: BodyCreateNewCollectionApiUserUserIdCollectionPost;
    path: {
        user_id: string;
    };
    query?: never;
    url: '/api/user/{user_id}/collection/';
};

export type CreateNewCollectionApiUserUserIdCollectionPostErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type CreateNewCollectionApiUserUserIdCollectionPostError = CreateNewCollectionApiUserUserIdCollectionPostErrors[keyof CreateNewCollectionApiUserUserIdCollectionPostErrors];

export type CreateNewCollectionApiUserUserIdCollectionPostResponses = {
    /**
     * Successful Response
     */
    200: Collection;
};

export type CreateNewCollectionApiUserUserIdCollectionPostResponse = CreateNewCollectionApiUserUserIdCollectionPostResponses[keyof CreateNewCollectionApiUserUserIdCollectionPostResponses];

export type UpdateCollectionAndMementosApiUserUserIdCollectionIdPutData = {
    body: BodyUpdateCollectionAndMementosApiUserUserIdCollectionIdPut;
    path: {
        id: number;
    };
    query?: never;
    url: '/api/user/{user_id}/collection/{id}';
};

export type UpdateCollectionAndMementosApiUserUserIdCollectionIdPutErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type UpdateCollectionAndMementosApiUserUserIdCollectionIdPutError = UpdateCollectionAndMementosApiUserUserIdCollectionIdPutErrors[keyof UpdateCollectionAndMementosApiUserUserIdCollectionIdPutErrors];

export type UpdateCollectionAndMementosApiUserUserIdCollectionIdPutResponses = {
    /**
     * Successful Response
     */
    200: Collection;
};

export type UpdateCollectionAndMementosApiUserUserIdCollectionIdPutResponse = UpdateCollectionAndMementosApiUserUserIdCollectionIdPutResponses[keyof UpdateCollectionAndMementosApiUserUserIdCollectionIdPutResponses];

export type ClientOptions = {
    baseUrl: `${string}://${string}` | (string & {});
};